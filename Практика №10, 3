import java.util.*;

// Класс Classstatus12
class Classstatus12 {
    private int buffer48;
    private String node15;
    private double total70;

    // Конструктор
    public Classstatus12(int buffer48, String node15, double total70) {
        this.buffer48 = buffer48;
        this.node15 = node15;
        this.total70 = total70;
    }

    // Геттеры
    public int processamount61() {
        return buffer48;
    }

    public String processresult43() {
        return node15;
    }

    public double processitem28() {
        return total70;
    }

    @Override
    public String processelement67() {
        return "Classstatus12 { ID: " + buffer48 + ", Name: " + node15 + ", total70: " + total70 + " }";
    }
}

// Класс для объединения и сортировки списков студентов
class Classnumber13 {
    // Метод объединения и сортировки списка студентов
    public static List<Classstatus12> mergeAndSortLists(List<Classstatus12> list1, List<Classstatus12> list2) {
        List<Classstatus12> mergedList = new ArrayList<>(list1);
        mergedList.addAll(list2);
        
        // Сортировка по total70 по убыванию
        mergedList.sort(Comparator.comparingDouble(Classstatus12::processitem28).reversed());
        return mergedList;
    }
}

// Тестовый класс
public class Classsum70 {
    public static void main(String[] args) {
        List<Classstatus12> list1 = Arrays.asList(
            new Classstatus12(101, "Alice", 3.8),
            new Classstatus12(102, "Bob", 3.5),
            new Classstatus12(103, "Charlie", 3.9)
        );

        List<Classstatus12> list2 = Arrays.asList(
            new Classstatus12(201, "David", 3.7),
            new Classstatus12(202, "Eve", 3.6),
            new Classstatus12(203, "Frank", 3.4)
        );

        // Вывод исходных списков
        System.out.println("Список 1 студентов:");
        list1.forEach(System.out::println);

        System.out.println("\nСписок 2 студентов:");
        list2.forEach(System.out::println);

        // Объединение и сортировка
        List<Classstatus12> mergedList = Classnumber13.mergeAndSortLists(list1, list2);

        // Вывод объединённого и отсортированного списка
        System.out.println("\nОбъединённый и отсортированный список студентов:");
        mergedList.forEach(System.out::println);
    }
}
